locals {
  wait_for_cloud_init_script = "${path.module}/wait_for_cloud_init.sh"
  docker_compose_api_loadbalancer_template = "${path.module}/docker-compose-api-loadbalancer_template.yaml"
  docker_compose_api_loadbalancer_file = "docker-compose-api-loadbalancer.yaml"
  docker_compose_etcd_template = "${path.module}/docker-compose-etcd_template.yaml"
  docker_compose_etcd_file = "docker-compose-etcd.yaml"
  kubeadm_config_template = "${path.module}/kubeadm-config_template.yaml"
  kubeadm_config_file = "kubeadm-config.yaml"
  kubeadm_config_etcd_template = "${path.module}/kubeadm-config-etcd_template.yaml"
  kubeadm_config_etcd_file = "kubeadm-config-etcd.yaml"
  kubeadm_nokubeproxy_patch_src = "${path.module}/manifests/kubeadm_nokubeproxy_patch.yaml"
  kubeadm_nokubeproxy_patch_file = "kubeadm_nokubeproxy_patch.yaml"
  flannel_template = "${path.module}/manifests/flannel_template.yaml"
  flannel_file = "flannel.yaml"
  kuberouter_template = "${path.module}/manifests/kuberouter_template.yaml"
  kuberouter_file = "kuberouter.yaml"
  cloud_controller_manager_template = "${path.module}/manifests/cloud_controller_manager_pod_template.yaml"
  cloud_controller_manager_file = "cloud-controller-manager.yaml"
  cloud_controller_manager_clusterrolebinding_src = "${path.module}/manifests/cloud_controller_manager_clusterrolebinding.yaml"
  cloud_controller_manager_clusterrolebinding_file = "cloud-controller-manager-clusterrolebinding.yaml"
  cloud_provider_configuration_template = "${path.module}/configurations/openstack.conf"
  cloud_provider_configuration_file = "openstack.conf"
}